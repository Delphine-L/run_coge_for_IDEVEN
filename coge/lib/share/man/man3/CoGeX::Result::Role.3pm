.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "CoGeX::Result::Role 3"
.TH CoGeX::Result::Role 3 "2015-05-06" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
My::Schema::Result::Role
.SH "AUTHORS"
.IX Header "AUTHORS"
.Vb 1
\& Eric Lyons
.Ve
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
The full text of the license can be found in the
\&\s-1LICENSE\s0 file included with this module.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.SS "is_<\s-1ROLE\s0>"
.IX Subsection "is_<ROLE>"
.Vb 6
\& Usage     :
\& Purpose   :
\& Returns   :
\& Argument  : None
\& Throws    : None
\& Comments  :
.Ve
.SS "is_higher"
.IX Subsection "is_higher"
.Vb 6
\& Usage     : $self\->is_higher( role )
\& Purpose   : Test whether this role is more privileged than given role.
\& Returns   : true or false
\& Argument  : None
\& Throws    : None
\& Comments  :
.Ve
.SS "groups"
.IX Subsection "groups"
.Vb 6
\& Usage     : $self\->groups
\& Purpose   : alias for $self\->user_groups
\& Returns   : DBIX::Class for user_group objects
\& Argument  : None
\& Throws    : None
\& Comments  :
.Ve
.SS "permissions"
.IX Subsection "permissions"
.Vb 6
\& Usage     :
\& Purpose   : Returns permission objects
\& Returns   : wantArray of permission objects
\& Argument  : None
\& Throws    : None
\& Comments  :
.Ve
