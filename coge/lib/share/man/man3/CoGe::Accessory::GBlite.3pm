.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "CoGe::Accessory::GBlite 3"
.TH CoGe::Accessory::GBlite 3 "2015-05-06" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
GBlite.pm
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 10
\& use GBlite;
\& my $genbank = new GBlite(\e*STDIN);
\& while(my $entry = $genbank\->nextEntry) {
\&   $entry\->locus;
\&   $entry\->mol_type;
\&   $entry\->division;
\&   $entry\->date;           # yyyy\-mm\-dd
\&   $entry\->definition;
\&   $entry\->accession;
\&   $entry\->version;
\&   $entry\->gi;
\&   $entry\->keywords;       # reference to ARRAY
\&   $entry\->organism;
\&   $entry\->organism_long;
\&   $entry\->features;       # reference to ARRAY
\&   $entry\->sequence;
\&   $entry\->chromosome;
\&
\&   foreach my $feature (@{$entry\->features}) {
\&     $feature\->key;
\&     $feature\->location;
\&     $feature\->qualifiers; # reference to HASH
\&   }
\& }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
GBlite is a package for parsing concatenated GenBank flat files. The GenBank
format is a common format for bioinformatics. Its specification is complicated,
and anyone using this module should at least skim the GenBank release.notes and
the DDJB/EMBL/GenBank feature table specification. These documents are
available from the \s-1NCBI\s0.
.SH "AUTHOR"
.IX Header "AUTHOR"
Ian Korf (ikorf@sapiens.wustl.edu, http://sapiens.wustl.edu/~ikorf)
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
This software was developed at Washington Univeristy, St. Louis, \s-1MO\s0.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2000 Ian Korf. All Rights Reserved.
.SH "DISCLAIMER"
.IX Header "DISCLAIMER"
This software is provided \*(L"as is\*(R" without warranty of any kind.
