.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\" ========================================================================
.\"
.IX Title "CoGe::Graphics::GenomeView 3"
.TH CoGe::Graphics::GenomeView 3 "2015-05-06" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME  GenomeView"
.IX Header "NAME  GenomeView"
.Vb 1
\& CoGe::Graphics::GenomeView
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 10
\& my $gv = new CoGe::Graphics::GenomeView({color_band_flag=>1, image_width=>800, chromosome_height=>20}) ;
\& $gv\->add_chromosome(name=>"Chr: 1",
\&                     end=>30000000,
\&                     );
\& $gv\->add_chromosome(name=>"Chr: 10",
\&                     end=>10000000,
\&                     );
\& #add a series of tick marks at various positions
\& my $up = 0; #is the tick on top or bottom of chromosome?
\& foreach (my $i=1;$i<=30000000,$i+=100000)
\&  {
\&    $gv\->add_feature(name=>"Mark at position $i,
\&                     start=>$i,
\&                     stop=>$i,
\&                     chr=>"Chr: 1", #must match one of the specified chromosomes
\&                     imagemap=>qq/"Mark at position $i" onclick="your_js_function(1, $i);"/,
\&                     up=>$up,
\&                     color=>[255,0,0],
\&                    );
\&    $up = $up == 1 ? 0 : 1;
\&  }
\&
\& foreach (my $i=1;$i<=10000000,$i+=1000000)
\&  {
\&    $gv\->add_feature(name=>"Mark at position $i,
\&                     start=>$i,
\&                     stop=>$i,
\&                     chr=>"Chr: 10",
\&                     imagemap=>qq/"Mark at position $i" onclick="your_js_function(1, $i);"/,
\&                     up=>$up,
\&                     color=>[0,255,0],
\&                    );
\&    $up = $up == 1 ? 0 : 1;
\&  }
\&
\& my $file = $gv\->generate_png(filename=>"image.png");
\& my $map = $gv\->generate_imagemap(mapname=>"genomeview_imagemap");
\&
\& print qq{Content\-Type: text/html
.Ve
.PP
<html>
<head></head>
<body>
<img src=$file ismap usemap='#genomeview_imagemap' border=0>$map
</body>
</html>
};
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 4
\& GenomeView creates images that give a graphical overview of an entire chromosome that can be painted
\& with tick marks.  These tick marks can be used to show where blast hits fall on a chromosome, where
\& genes reside, etc.  Each tick mark can also be used as a link in an imagemap to other web\-pages or
\& javascript functions.
.Ve
.SH "USAGE"
.IX Header "USAGE"
.Vb 2
\& use CoGe::Graphics::GenomeView;
\& my $gv = CoGe::Graphics::GenomeView\->new();
.Ve
.SH "BUGS Documentation for this module is lacking"
.IX Header "BUGS Documentation for this module is lacking"
.SH "SUPPORT"
.IX Header "SUPPORT"
.Vb 2
\& Please contact Eric Lyons with questions, comments, suggestions, and most importantly code
\&improvements.
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
.Vb 2
\&        Eric Lyons
\&        elyons@nature.berkeley.edu
.Ve
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Permission to use, copy, modify, and distribute this software and its documentation for educational, research, and not-for-profit purposes, without fee and without a signed licensing agreement, is hereby granted, provided that the above copyright notice, this paragraph and the following two paragraphs appear in all copies, modifications, and distributions. Contact The Office of Technology Licensing, \s-1UC\s0 Berkeley, 2150 Shattuck Avenue, Suite 510, Berkeley, \s-1CA\s0 94720\-1620, (510) 643\-7201, for commercial licensing opportunities.
.PP
The full text of the license can be found in the
\&\s-1LICENSE\s0 file included with this module.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Vb 2
\& perl(1).
\& GD
.Ve
